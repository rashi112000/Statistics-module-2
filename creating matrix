vec1 <- 1:9
m <- matrix(vec1, nrow=3) # matrix function is used and we have to specify number of rows
m
class(m)
typeof(m)
m <- matrix(LETTERS[1:9], ncol=3)
m
t(m) # using this function to transpose the matrix- making column to rows and vice versa, rotating it along the diagnol
# byrow default value is FALSE, that means the data is filled by columns first
m <- matrix(data = LETTERS[1:9], ncol=3, byrow =TRUE)

#creating new matrix using new vectors
first_row <- 1:5
second_row <- 11:15
third_row <- 101:105
rbind(first_row, second_row, third_row )

first_col <- 1:5
second_col <- 11:15
third_col <- 101:105
cbind(first_col, second_col, third_col )
dim(m) # tells us about the rows and columns
nrow()
ncol()

# rownames()
# colnames()
rownames(m) <- c("R1", "R2", "R3")
colnames(m) <- c("C1", "C2", "C3")
m
rownames(m) <- NULL # this is used to remove the names of the rows

m[1,1] # extracting elements
# extracting rows and columns
m[1,] -> row
m[,1] -> column
m[, 2:3] or m[, c(1,3)]

m["R1",]                                      
m["R1",c(1,3)]
m[,c(TRUE, FALSE, TRUE)]
rowMeans()= # calculates the mean of each row

m[1,1] <- "o"
m["R2", 2] <- "8"
m["R3", ] <- "6"
m
m[, 2]
m[, 2] <- c(3,8,0)
m
m[-1, ]

# can't remove just one lement as the matrix has to maintain it's rectangular shape

m+2 or m/2
# Matrix multiplication  -> %*%
%*%
